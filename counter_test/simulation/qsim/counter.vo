// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "11/23/2022 08:36:13"

// 
// Device: Altera EP3C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter (
	clk,
	rst,
	en,
	out_count);
input 	clk;
input 	rst;
input 	en;
output 	[4:0] out_count;

// Design Ports Information
// en	=>  Location: PIN_B12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out_count[0]	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out_count[1]	=>  Location: PIN_P1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out_count[2]	=>  Location: PIN_P3,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out_count[3]	=>  Location: PIN_K5,	 I/O Standard: 2.5 V,	 Current Strength: Default
// out_count[4]	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_E2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// rst	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \en~input_o ;
wire \out_count[0]~output_o ;
wire \out_count[1]~output_o ;
wire \out_count[2]~output_o ;
wire \out_count[3]~output_o ;
wire \out_count[4]~output_o ;
wire \clk~input_o ;
wire \clk~inputclkctrl_outclk ;
wire \out_count[1]~5_combout ;
wire \rst~input_o ;
wire \rst~inputclkctrl_outclk ;
wire \out_count[1]~6 ;
wire \out_count[2]~7_combout ;
wire \out_count[2]~reg0_q ;
wire \out_count[2]~8 ;
wire \out_count[3]~9_combout ;
wire \out_count[3]~reg0_q ;
wire \out_count[3]~10 ;
wire \out_count[4]~11_combout ;
wire \out_count[4]~reg0_q ;
wire \Equal0~1_combout ;
wire \out_count[1]~reg0_q ;
wire \Equal0~0_combout ;
wire \out_count[0]~4_combout ;
wire \out_count[0]~reg0_q ;


// Location: IOOBUF_X0_Y4_N16
cycloneiii_io_obuf \out_count[0]~output (
	.i(\out_count[0]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out_count[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \out_count[0]~output .bus_hold = "false";
defparam \out_count[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N23
cycloneiii_io_obuf \out_count[1]~output (
	.i(\out_count[1]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out_count[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \out_count[1]~output .bus_hold = "false";
defparam \out_count[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X1_Y0_N16
cycloneiii_io_obuf \out_count[2]~output (
	.i(\out_count[2]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out_count[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \out_count[2]~output .bus_hold = "false";
defparam \out_count[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y6_N16
cycloneiii_io_obuf \out_count[3]~output (
	.i(\out_count[3]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out_count[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \out_count[3]~output .bus_hold = "false";
defparam \out_count[3]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y5_N23
cycloneiii_io_obuf \out_count[4]~output (
	.i(\out_count[4]~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out_count[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \out_count[4]~output .bus_hold = "false";
defparam \out_count[4]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N1
cycloneiii_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneiii_clkctrl \clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk~inputclkctrl .clock_type = "global clock";
defparam \clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N2
cycloneiii_lcell_comb \out_count[1]~5 (
// Equation(s):
// \out_count[1]~5_combout  = (\out_count[0]~reg0_q  & (\out_count[1]~reg0_q  $ (VCC))) # (!\out_count[0]~reg0_q  & (\out_count[1]~reg0_q  & VCC))
// \out_count[1]~6  = CARRY((\out_count[0]~reg0_q  & \out_count[1]~reg0_q ))

	.dataa(\out_count[0]~reg0_q ),
	.datab(\out_count[1]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\out_count[1]~5_combout ),
	.cout(\out_count[1]~6 ));
// synopsys translate_off
defparam \out_count[1]~5 .lut_mask = 16'h6688;
defparam \out_count[1]~5 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneiii_io_ibuf \rst~input (
	.i(rst),
	.ibar(gnd),
	.o(\rst~input_o ));
// synopsys translate_off
defparam \rst~input .bus_hold = "false";
defparam \rst~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneiii_clkctrl \rst~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\rst~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\rst~inputclkctrl_outclk ));
// synopsys translate_off
defparam \rst~inputclkctrl .clock_type = "global clock";
defparam \rst~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N4
cycloneiii_lcell_comb \out_count[2]~7 (
// Equation(s):
// \out_count[2]~7_combout  = (\out_count[2]~reg0_q  & (!\out_count[1]~6 )) # (!\out_count[2]~reg0_q  & ((\out_count[1]~6 ) # (GND)))
// \out_count[2]~8  = CARRY((!\out_count[1]~6 ) # (!\out_count[2]~reg0_q ))

	.dataa(gnd),
	.datab(\out_count[2]~reg0_q ),
	.datac(gnd),
	.datad(vcc),
	.cin(\out_count[1]~6 ),
	.combout(\out_count[2]~7_combout ),
	.cout(\out_count[2]~8 ));
// synopsys translate_off
defparam \out_count[2]~7 .lut_mask = 16'h3C3F;
defparam \out_count[2]~7 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N5
dffeas \out_count[2]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\out_count[2]~7_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out_count[2]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out_count[2]~reg0 .is_wysiwyg = "true";
defparam \out_count[2]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N6
cycloneiii_lcell_comb \out_count[3]~9 (
// Equation(s):
// \out_count[3]~9_combout  = (\out_count[3]~reg0_q  & (\out_count[2]~8  $ (GND))) # (!\out_count[3]~reg0_q  & (!\out_count[2]~8  & VCC))
// \out_count[3]~10  = CARRY((\out_count[3]~reg0_q  & !\out_count[2]~8 ))

	.dataa(\out_count[3]~reg0_q ),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\out_count[2]~8 ),
	.combout(\out_count[3]~9_combout ),
	.cout(\out_count[3]~10 ));
// synopsys translate_off
defparam \out_count[3]~9 .lut_mask = 16'hA50A;
defparam \out_count[3]~9 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N7
dffeas \out_count[3]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\out_count[3]~9_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out_count[3]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out_count[3]~reg0 .is_wysiwyg = "true";
defparam \out_count[3]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N8
cycloneiii_lcell_comb \out_count[4]~11 (
// Equation(s):
// \out_count[4]~11_combout  = \out_count[3]~10  $ (\out_count[4]~reg0_q )

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\out_count[4]~reg0_q ),
	.cin(\out_count[3]~10 ),
	.combout(\out_count[4]~11_combout ),
	.cout());
// synopsys translate_off
defparam \out_count[4]~11 .lut_mask = 16'h0FF0;
defparam \out_count[4]~11 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y4_N9
dffeas \out_count[4]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\out_count[4]~11_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out_count[4]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out_count[4]~reg0 .is_wysiwyg = "true";
defparam \out_count[4]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N16
cycloneiii_lcell_comb \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = (\out_count[4]~reg0_q ) # (!\Equal0~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\out_count[4]~reg0_q ),
	.datad(\Equal0~0_combout ),
	.cin(gnd),
	.combout(\Equal0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~1 .lut_mask = 16'hF0FF;
defparam \Equal0~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N3
dffeas \out_count[1]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\out_count[1]~5_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~1_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out_count[1]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out_count[1]~reg0 .is_wysiwyg = "true";
defparam \out_count[1]~reg0 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N10
cycloneiii_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (\out_count[0]~reg0_q  & (!\out_count[1]~reg0_q  & (\out_count[2]~reg0_q  & !\out_count[3]~reg0_q )))

	.dataa(\out_count[0]~reg0_q ),
	.datab(\out_count[1]~reg0_q ),
	.datac(\out_count[2]~reg0_q ),
	.datad(\out_count[3]~reg0_q ),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h0020;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N12
cycloneiii_lcell_comb \out_count[0]~4 (
// Equation(s):
// \out_count[0]~4_combout  = ((\Equal0~0_combout  & !\out_count[4]~reg0_q )) # (!\out_count[0]~reg0_q )

	.dataa(gnd),
	.datab(\Equal0~0_combout ),
	.datac(\out_count[0]~reg0_q ),
	.datad(\out_count[4]~reg0_q ),
	.cin(gnd),
	.combout(\out_count[0]~4_combout ),
	.cout());
// synopsys translate_off
defparam \out_count[0]~4 .lut_mask = 16'h0FCF;
defparam \out_count[0]~4 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N13
dffeas \out_count[0]~reg0 (
	.clk(\clk~inputclkctrl_outclk ),
	.d(\out_count[0]~4_combout ),
	.asdata(vcc),
	.clrn(\rst~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out_count[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out_count[0]~reg0 .is_wysiwyg = "true";
defparam \out_count[0]~reg0 .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X25_Y24_N8
cycloneiii_io_ibuf \en~input (
	.i(en),
	.ibar(gnd),
	.o(\en~input_o ));
// synopsys translate_off
defparam \en~input .bus_hold = "false";
defparam \en~input .simulate_z_as = "z";
// synopsys translate_on

assign out_count[0] = \out_count[0]~output_o ;

assign out_count[1] = \out_count[1]~output_o ;

assign out_count[2] = \out_count[2]~output_o ;

assign out_count[3] = \out_count[3]~output_o ;

assign out_count[4] = \out_count[4]~output_o ;

endmodule
